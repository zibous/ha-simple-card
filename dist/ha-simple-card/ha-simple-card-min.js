/**
 * ha-simple-card 0.0.4
 * https://github.com/zibous/ha-simple-card
 * 
 * License: MIT
 * Generated on 2020
 * Author: Peter siebler
 */

class buttons{constructor(t){this.shadowRoot=t.shadowRoot,this.parentNode=t.parentNode,this.hass=t.hass,this.entities=t.entities,this.hassEntities=t.hassEntities,this.locale=t.locale,this.buttonstate={},this.buttonslist=[],this.button_layer=null,this.update=!1,this.intialized=!1,this.render()}set_buttonstyle(){if(!this.button_layer)return!1;const t=document.createElement("style");return t.textContent='\n            .sc-buttons{\n                position:relative;\n                margin-left: 0.5em;\n                width:100%;\n                height:100%\n            }\n            .clearfix::before, .clearfix::after {\n                content: " ";\n                display: table;\n            }\n            .sc-button{\n                vertical-align: top;\n                display:inline-block;\n                width: var(--tile-width, 110px);\n                height: var(--tile-height, 110px);\n                padding:10px;\n                background-color: var(--tile-background, rgba(255, 255, 255, 1));\n                border-radius: var(--tile-border-radius, 12px);\n                box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.15);\n                margin: 0.5em;\n                position: relative;\n                overflow:hidden;\n                font-weight:300;\n                font-size: 0.95em;\n                color: var(--tile-on-name-text-color, rgba(0, 0, 0, 1));\n                touch-action: auto!important;\n            }\n            .sc-button.image::before{\n                content: "";\n                position: absolute;\n                top: 0px;\n                right: 0px;\n                bottom: 0px;\n                left: 0px;\n                background-color: rgba(0,0,0,0.35);\n            }\n            .sc-button.off {\n                filter: brightness(0.7) !important;\n                color: var(--tile-on-name-text-color, rgba(0, 0, 0, 0.40)) !important;\n            }\n            .sc-button-data{\n                position: absolute;\n                left: 0;\n                bottom: 8px;\n                width: 100%;\n                background: transparent;\n            }\n            .sc-digitbutton-data{\n                position: absolute;\n                left: 0;\n                bottom: 0;\n                width: 100%;\n                height: calc(100% - 42px);\n                background: transparent;\n                color: var(--tile-on-name-text-color, rgba(0, 0, 0, 0.60)) !important;\n            }\n            .sc-button-name, .sc-digitbutton-name{\n                margin: 0 8px;\n                font-weight: 400;\n                width: 90%;\n                overflow:hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                color: var(--tile-on-name-text-color, rgba(0, 0, 0, 0.60));\n            }\n            .sc-button-value, .sc-digitbutton-value{\n                margin: 0 8px;  \n                width: 85%;\n                font-weight: 500;\n                text-align:right;\n                overflow:hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            .sc-digitbutton-value{\n                font-weight: 400;\n                text-align:center;\n                vertical-align:top;\n                font-size: 2.2em;\n                line-height:2.3em;\n            }\n            .sc-digitbutton-value span{\n                font-size: 0.45em;\n                vertical-align: top;\n                display: inline-block;\n                position: relative;\n                top: -7px;\n                left: 4px;\n            }\n            .sc-digitbutton-name{\n                position:relative;\n                bottom:8px;\n                font-size: 0.8em;\n            }\n            .sc-button-date{\n                margin: 0 8px;  \n                text-align: right;\n                width: 85%;\n                overflow:hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                font-size: 0.85em;\n            }\n            .circle-state {\n                stroke-dasharray: calc((251.2 / 100) * var(--percentage)), 251.2;\n                position:absolute;\n                margin:0;\n                top:10px;\n                right:10px;\n                width: 40px;\n                height: 40px;\n                cursor: pointer;\n            }\n            .sc-button .icon {\n                display:block;\n                height: calc(var(--tile-icon-size, 30px) + 10px);\n                width: calc(var(--tile-icon-size, 30px) + 10px);\n                color: var(--tile-icon-color, rgba(0, 0, 0, 0.3));\n                font-size: var(--tile-icon-size, 30px);\n                --mdc-icon-size: var(--tile-icon-size, 30px);\n                transform-origin: 50% 50%;\n                line-height: calc(var(--tile-icon-size, 30px) + 10px);\n                text-align: center;\n                pointer-events: none;\n                position: absolute;\n                top: 8px;\n                left:8px;\n            }\n            .sc-button .icon.center{\n                position: absolute;\n                left:25px;\n                top: 20px;\n                --mdc-icon-size: var(--tile-icon-size, 80px);\n            }\n            .sc-button .icon.on {\n                color: var(--tile-on-icon-color, #f7d959);\n            }\n            .sc-button .icon.off {\n                color: var(--tile-icon-color, rgba(0, 0, 0, 0.3));\n            }\n            .sc-button .icon.image{\n                position: relative;\n                top: 0;\n                left: 0;\n                width: 42px;\n                border-radius: var(--tile-image-radius, 100%);\n            }\n            .sc-button .icon ha-icon {\n                width:30px;\n                height:30px;\n                pointer-events: none;\n            }\n            .sc-imagebutton{\n                top:0;\n                left:0;\n                position:absolute;\n                height: 100%;\n                width:100%;\n                font-weight:500;\n                text-shadow: 0px 4px 3px rgba(0,0,0,0.4), 0px 8px 13px rgba(0,0,0,0.1),0px 18px 23px rgba(0,0,0,0.1);\n                z-index:10;\n                color: #FFFFFF;\n            }\n            .sc-imagebutton-value, .sc-iconbutton-value{\n                position:absolute;\n                right: 1em;\n                top: 0.3em;\n            }\n            .sc-imagebutton-name, .sc-iconbutton-name{\n                position:absolute;\n                bottom: 0.3em;\n                left: 1em;\n                width:80%;\n                overflow:hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            .sc-iconbutton{\n                top:0;\n                left:0;\n                position:absolute;\n                height: 100%;\n                width:100%;\n                font-weight:500;\n            }\n            @media (min-width: 481px) and (max-width: 767px) {\n                .sc-button{\n                    transform: scale(0.95);\n                    margin: -0.3em;\n                }\n            }\n            @media (min-width: 320px) and (max-width: 480px){\n                .sc-button{\n                    transform: scale(0.80);\n                    margin: -0.6em;\n                }\n            }\n        ',this.parentNode.append(t),!0}_calculateTime(t){const e=new Date,n=new Date(t),i=e.getTime()-n.getTime(),s=Math.floor(i/864e5),a=Math.floor(i%864e5/36e5),o=Math.round(i%864e5%36e5/6e4),r=Math.round(i%864e5%36e5%6e4/1e3);return s>0?s+" d":a>0?a+" h":o>0?o+" m":r+" s"}_checkButtonState(t,e){this.buttonstate={status:["off","unavailable"].includes(e.value)?"off":"on"},"off"===this.buttonstate.status?t.classList.add("off"):t.classList.remove("off")}renderCircleState(t){return`\n            <svg id="${t.id}C" class="circle-state"\n                viewbox="0 0 100 100"\n                style="${t.brightness&&!t.state?"--percentage:"+t.brightness/2.55:""}"\n            >\n                <path\n                    id="progress"\n                    stroke-width="3"\n                    stroke="#aaabad"\n                    fill="none"\n                    d="M50 10\n                    a 40 40 0 0 1 0 80\n                    a 40 40 0 0 1 0 -80"\n                ></path>\n                <text id="id="${t.id}IT'" x="50" y="50" fill="#7d7e80" text-anchor="middle" dy="7" font-size="20">\n                    ${t.brightness&&"on"===this.buttonstate.status?(t.brightness/2.55).toFixed(0)+"%":t.circle}\n                </text>\n            </svg>\n        `}renderImageButton(t,e){this._checkButtonState(t,e);let n=[];e.image&&(t.style.cssText=t.style.cssText+`background-image: url('${e.image}'); no-repeat center center fixed;background-size: cover;`,n.push(`<div class="sc-imagebutton"> \n                 <div id="${e.id}V" class="sc-imagebutton-value">${e.value}</div>\n                 <div class="sc-imagebutton-name">${e.name.toUpperCase()}</div>\n               </div>`),t.innerHTML=n.join(""))}renderIconButton(t,e){this._checkButtonState(t,e);let n=[];e.icon&&(n.push(`<div class="sc-iconbutton"> \n                 <div id="${e.id}V" class="sc-iconbutton-value">${e.value}</div>\n                 <ha-icon id="${e.id}I" class="icon center ${this.buttonstate.status}" icon="${e.icon}"></ha-icon>\n                 <div class="sc-iconbutton-name">${e.name.toUpperCase()}</div>\n               </div>`),t.innerHTML=n.join(""))}renderDigitButton(t,e){this._checkButtonState(t,e);let n=[];e.image?n.push(`<img class="icon image" src="${e.image}" alt="" />`):n.push(`<ha-icon id="${e.id}I" class="icon ${this.buttonstate.status}" icon="${e.icon}"></ha-icon>`),n.push(`${this.renderCircleState(e)}`),n.push(`<div class="sc-digitbutton-data">  \n                    <div id="${e.id}V" class="sc-digitbutton-value">${e.value}\n                        <span>${e.unit}<span>\n                    </div>\n                    <div class="sc-digitbutton-name">${e.name.toUpperCase()}</div>\n                   </div>\n        `),t.innerHTML=n.join("")}renderDefaultButton(t,e){this._checkButtonState(t,e);let n=[];e.image?n.push(`<img class="icon image img" src="${e.image}" alt="" />`):n.push(`<ha-icon id="${e.id}I" class="icon ${this.buttonstate.status}" icon="${e.icon}"></ha-icon>`),n.push(`${this.renderCircleState(e)}`),n.push(`\n          <div class="sc-button-data">  \n          <div class="sc-button-name">${e.name.toUpperCase()}</div>\n          <div id="${e.id}V" class="sc-button-value">${e.value} ${e.unit}</div>\n          <div id="${e.id}D" class="sc-button-date">${e.date}</div>\n          </div>\n        `),t.innerHTML=n.join("")}tranlate(t,e){console.log(t);const n=this.hass.selectedLanguage||this.hass.language,i=this.hass.resources[n]||"de";return i&&i[t]?i[t]:e}getButtonData(t){if(!t)return null;const e=t.entity_id.split(".")[0]||"alert",n=t.entity_id.split(".")[1],i=this.hassEntities.find(e=>e.entity_id===t.entity);return{id:t.entity_id,name:t.name||n||t.attributes.name||t.entity_id,type:e,value:localValue(t.state,this.locale)||"",unit:t.unit||t.attributes.unit_of_measurement||"",valuetype:t.type||typeof t.state,date:localDatetime(t.last_updated,this.locale)||"",circle:this._calculateTime(t.last_updated)||"",icon:t.icon||t.attributes.icon||HASS_ICONS[e]||HASS_ICONS.default,status:this.buttonstate.status||"off",brightness:i&&i.attributes?i.attributes.brightness:null,rgb_color:i&&i.attributes?i.attributes.rgb_color:null,xy_color:i&&i.attributes?i.attributes.xy_color:null,image:t.image||null,style:t.style||""}}_toggle(t,e){this.hass&&this.hass.callService("homeassistant",e||"toggle",{entity_id:t.entity_id})}_fire(t,e){const n=new Event(t,{bubbles:!0,cancelable:!1,composed:!0});return n.detail=e||{},this.shadowRoot.dispatchEvent(n),n}_clickAction(t){this._fire("hass-more-info",{entityId:t})}updateButtons(){this.entities.forEach((t,e)=>{const n=this.hassEntities.find(e=>e.entity_id===t.entity),i=this.getButtonData(t);if(t.last_updated!==n.last_updated||"light"===i.type){"light"===i.type&&(i.brightness=n.attributes.brightness||null,i.rgb_color=n.attributes.rgb_color||null,i.xy_color=n.attributes.xy_color||null),i.value=localValue(n.state,this.locale)||"",i.date=localDatetime(n.last_updated,this.locale)||"",i.circle=this._calculateTime(n.last_updated)||"";const e=this.buttonslist[t.entity_id];switch(t.type){case"digitbutton":this.renderDigitButton(e,i);break;case"imagebutton":this.renderImageButton(e,i);break;case"iconbutton":this.renderIconButton(e,i);break;default:this.renderDefaultButton(e,i)}}})}renderButtons(){this.entities.forEach((t,e)=>{const n=this.getButtonData(t);if(n){const e=document.createElement("div");switch(e.setAttribute("class","sc-button buttons on"),e.id=t.entity_id,n.style&&(e.style.cssText=e.style.cssText+n.style),t.style&&(e.style.cssText=t.style.replaceAll("\n","")),n.value===localValue(t.last_updated,this.locale)&&(n.value=t.text||"Status",n.unit=""),t.type){case"digitbutton":this.renderDigitButton(e,n);break;case"imagebutton":e.setAttribute("class","sc-button image buttons on"),this.renderImageButton(e,n);break;case"iconbutton":this.renderIconButton(e,n);break;default:this.renderDefaultButton(e,n)}this.shadowRoot&&(e.onclick=this._clickAction.bind(this,t.entity_id)),this.buttonslist[e.id]=e,this.button_layer.append(e)}})}render(){this.entities&&this.entities.length&&this.parentNode&&(this.button_layer=document.createElement("div"),this.button_layer.setAttribute("class","sc-buttons clearfix"),this.set_buttonstyle(),this.update=!1,this.renderButtons(),this.parentNode.append(this.button_layer))}}class simpleClock{constructor(t){this.parentNode=t.parentNode,this.locale=t.locale,this.options=t.clockoptions,this.clocklayer=null,this.parentNode&&this.addClockLayer()}set_clockstyle(){if(!this.clocklayer)return!1;const t=document.createElement("style");return t.textContent="\n            .sc-clock{\n                position:relative;  \n                text-align: center;\n                width: 100%;\n                padding-top: 1em;\n                margin: 0 auto;\n                letter-spacing: 0.1em;\n            }  \n            .sc-time {\n                font-size: 3.0em;\n                line-height: 1em;\n                letter-spacing: 0.1em;\n            }\n            .sc-date {\n                ext-transform: uppercase;\n                font-size: 1.3em;\n                font-weight: 400;\n                line-height: 1.5em;\n                margin-bottom: 1em;\n            }\n            ",this.parentNode.append(t),!0}addClockLayer(){this.clocklayer||(this.clocklayer=document.createElement("div"),this.clocklayer.setAttribute("class","sc-clock"),this.set_clockstyle(),this.parentNode.appendChild(this.clocklayer)),this.setClockTime(),setInterval(this.setClockTime.bind(this),6e4)}setClockTime(){this.options=this.options||{weekday:"short",month:"short",day:"numeric"};let t=new Date,e=t.getHours(),n=t.getMinutes();const i=t.toLocaleDateString(this.locale,this.options).replaceAll(".","");n=n<10?"0"+n:n,this.clocklayer.innerHTML=`<div class="sc-time">${e}:${n}</div><div class="sc-date">${i}</div>`}}class dayStateCard{constructor(t){this.parentNode=t.parentNode,this.locale=t.locale,this.hass=t.hass,this.entities=t.entities,this.moon=null,this.sun=null,this.cardlayer=null,this._config()}_config(){this.hass&&this.hass.states&&(this.hass.states["sun.sun"]&&(this.sun=this.hass.states["sun.sun"],this.sun.assets=appinfo.assets+"sun/"),this.hass.states["sensor.moon"]&&(this.moon=this.hass.states["sensor.moon"],this.moon.assets=appinfo.assets+"moon/",this.moon.phase=this._getMoonPhase(this.hass.states["sensor.moon"].state),this.moon.icon=this.moon.assets+this.moon.phase+".png"),this._createCardLayer())}_createCardLayer(){this.cardlayer||(this.cardlayer=document.createElement("div"),this.cardlayer.setAttribute("class","sc-daystate"),this.parentNode.appendChild(this.cardlayer),this.update())}_getMoonPhase(t){switch(t){case"new_moon":return"New Moon";case"waxing_crescent":return"Waxing Crescent Moon";case"first_quarter":return"First Quarter Moon";case"waxing_gibbous":return"Waxing Gibbous Moon";case"full_moon":return"Full Moon";case"waning_gibbous":return"Waning Gibbous Moon";case"last_quarter":return"Last Quarter Moon";case"waning_crescent":return"Waning Crescent Moon";default:return""}}update(){if(this.cardlayer){const t=[];this.moon&&t.push(`\n                    <div class="header">\n                        <div class="title">CURRENT PHASE</div>\n                        <div class="date">${localDatetime(new Date,this.locale)}</div>\n                    </div>\n                    <div class="content">\n                        <img src="${this.moon.icon}" class="img" alt="${this.moon.phase}">\n                        <span class="name">${this.moon.phase}</span>\n                    </div>`),t.length&&(this.cardlayer.innerHTML=t.join(" "))}}}const HASS_ICONS={default:"hass:eye",alert:"hass:alert",alexa:"hass:amazon-alexa",automation:"hass:playlist-play",calendar:"hass:calendar",camera:"hass:video",climate:"hass:thermostat",configurator:"hass:settings",conversation:"hass:text-to-speech",device_tracker:"hass:account",fan:"hass:fan",google_assistant:"hass:google-assistant",group:"hass:google-circles-communities",history_graph:"hass:chart-line",homeassistant:"hass:home-assistant",homekit:"hass:home-automation",image_processing:"hass:image-filter-frames",input_boolean:"hass:drawing",input_datetime:"hass:calendar-clock",input_number:"hass:ray-vertex",input_select:"hass:format-list-bulleted",input_text:"hass:textbox",light:"hass:lightbulb",mailbox:"hass:mailbox",notify:"hass:comment-alert",persistent_notification:"hass:bell",person:"hass:account",plant:"hass:flower",proximity:"hass:apple-safari",remote:"hass:remote",scene:"hass:google-pages",script:"hass:file-document",sensor:"hass:eye",binarysensor:"hass:eye",simple_alarm:"hass:bell",sun:"hass:white-balance-sunny",switch:"hass:flash",timer:"hass:timer",updater:"hass:cloud-upload",vacuum:"hass:robot-vacuum",water_heater:"hass:thermometer",weather:"hass:weather-cloudy",weblink:"hass:open-in-new",zone:"hass:map-marker"};function typeOf(t){return Object.prototype.toString.call(t).slice(8,-1).toLowerCase()}function localDate(t,e){if(!t)return"";e||(e=navigator.language||navigator.userLanguage||"en-GB"),t=t.split("T")[0];const n=new Date(t.replace(/-/g,"/"));return isNaN(n)?t:new Intl.DateTimeFormat(e).format(n)}function localDatetime(t,e){if(!t)return"";e||(e=navigator.language||navigator.userLanguage||"en-GB"),t=t.replace("T"," ");const n=new Date(t.replace(/-/g,"/"));return isNaN(n)?t:new Intl.DateTimeFormat(e,{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"}).format(n)}function num(t){return t===parseInt(t)?Number(1*parseInt(t)):Number(1*parseFloat(t).toFixed(2))}const getType=function(t){return"boolean"==typeof t?"boolean":"number"==typeof t||!isNaN(parseFloat(t))&&isFinite(t)?"number":Number.isNaN(Number(new Date(t)))?"string"==typeof t?"string":{}.toString.call(t).match(/\s([a-zA-Z]+)/)[1].toLowerCase():"date"};function localValue(t,e){return t?(e||(e=navigator.language||navigator.userLanguage||"en-GB"),"date"===getType(t)?localDate(t,e):"number"===getType(t)?parseInt(t)===t?num(t).toLocaleString(e):num(t).toLocaleString(e,{minimumFractionDigits:2,maximumFractionDigits:2}):t):""}function deepMerge(...t){let e={};for(const n of t)if(n instanceof Array)e instanceof Array||(e=[]),e=[...e,...n];else if(n instanceof Object)for(let[t,i]of Object.entries(n))i instanceof Object&&t in e&&(i=deepMerge(e[t],i)),e={...e,[t]:i};return e}const appinfo={name:"✓ custom:simple-card",version:"0.0.9",assets:"/hacsfiles/ha-simple-card/assets/"};console.info("%c "+appinfo.name+"     %c ▪︎▪︎▪︎▪︎ Version: "+appinfo.version+" ▪︎▪︎▪︎▪︎ ","color:#FFFFFF; background:#3498db;display:inline-block;font-size:12px;font-weight:200;padding: 4px 0 4px 0","color:#2c3e50; background:#ecf0f1;display:inline-block;font-size:12px;font-weight:200;padding: 4px 0 4px 0");class SimpleCard extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._initialized=!1,this.entities=[],this.logenabled=!0}logInfo(...t){this.logenabled&&console.info((new Date).toISOString(),appinfo.name,...t)}setHassEntities(){this._hass&&(this.hassEntities=this.entities.map(t=>this._hass.states[t.entity]).filter(t=>void 0!==t))}_getAttributes(t,e){const n=new Map;return e.forEach(e=>{const i=[];i.push(t=>(function(t,e){let n,i,s;if("object"==typeof e?(n=e.key.split("."),s=e.key):(n=e.split("."),s=e),-1===(i=n[2]).indexOf("*"))return t==s;const a=new RegExp(`^${s.replace(/\*/g,".*")}$`,"i");return 0===t.search(a)})(t,e)),Object.keys(t.states).sort().forEach(s=>{Object.keys(t.states[s].attributes).sort().forEach(a=>{i.every(t=>t(`${s}.${a}`))&&n.set(`${s}.${a}`,{name:e.name?e.name:a.replace(/_/g," "),value:t.states[s].attributes[a],unit:e.unit||"",icon:e.icon||""})})})}),Array.from(n.values())}set hass(t){if(void 0!==t&&this._initialized&&(this._hass=t,this.setHassEntities(),this.buttons&&"buttons"===this.mode&&(this.buttons.hass=this._hass,this.buttons.hassEntities=this.hassEntities,!1===this.buttons.intialized&&this.entities&&this.buttons.updateButtons()),this.skipRender&&this.updateData(),!this.skipRender)){if(!this.init){if(this.init=!0,this.entities=[],"buttons"===this.mode)for(let t of this._config.entities)if(this._hass.states[t.entity]){let e={...this._hass.states[t.entity],...t};this.entities.push(e)}this.card||this.createCard()}this.skipRender=!0}}updateData(){if(this.mode&&this._hass&&this.entities)switch(this.mode){case"buttons":this.buttons&&this.hassEntities&&this.hassEntities.length&&(this.buttons.hassEntities=this.hassEntities,this.buttons.updateButtons());break;case"entities_card":if(this.attibutesfilter&&this.attibutesfilter.include){let t=this._getAttributes(this._hass,this.attibutesfilter.include);if(this.attibutesfilter.exclude){const e=this._getAttributes(this._hass,this.attibutesfilter.exclude).map(t=>t.name);t=t.filter(t=>!e.includes(t.name))}this.updateDataTable(this.root.getElementById("entities_card"),t)}}}addCss(){const t=document.createElement("style");t.setAttribute("id","sc-"+this.id),t.textContent="\n          .ha-simplecard-buttons{\n              position: relative;\n              background: transparent;\n          }\n          .sc-icon{\n            position: relative;\n            top: -3px;\n            color: var(--primary-text-color)\n          }\n          h2.sc-title{\n            font-size: 1.75em;\n            font-weight: 500;\n            padding-top: 1em;\n            padding-left: 6px;\n            width: 90%;\n            overflow:hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            display: inline-block;\n            margin: 0 0 0.5em 0.5em;\n            color: var(--primary-text-color)\n          }\n          p.sc-text{\n            font-size: 1.2em;\n            font-weight: 300;\n            margin: 0 1.5em;\n          }\n          div.dt-data{\n            width: 100%;\n            height:100%;\n            overflow:scroll;\n          }\n          table.dt-data {\n            width: 100%;\n            height: 100%;\n            padding: 0 1.5em 1em 1.2em;\n            line-height: 1.8em;\n          }\n          table.dt-data td.dt-name{\n            text-align:left;\n            font-weight:400;\n          }\n          table.dt-data td.dt-value{\n            text-align:right;\n          }\n          @media (min-width: 481px) and (max-width: 767px) {\n            h2.sc-title{\n              margin: 0 0 0.5em 0; \n              font-size: 1.5em;\n            }\n            p.sc-text{\n                font-size: 1.1em;\n            }\n         }\n         @media (min-width: 320px) and (max-width: 480px){\n            h2.sc-title{\n                margin: 0 0 0.5em 0; \n                font-size: 1.5em;\n                padding-left: 6px;\n            }\n            p.sc-text{\n                font-size: 1.1em;\n            }\n         }\n        ",this.root.append(t)}updateDataTable(t,e){t&&e&&(t.innerHTML=`\n            ${e.map(t=>`\n              <tr>\n                <td class="dt-name">${t.icon?'<ha-icon icon="'+t.icon+'" ></ha-icon>':""}${t.name}</td>\n                <td class="dt-value">${localValue(t.value,this.locale)}${t.unit}</td>\n              </tr>\n            `).join("")}\n          `)}createCardContent(t){if(!t)return;const e="100%"!=this.height;let n=null;if(this._config.title){const e=document.createElement("h2");if(e.setAttribute("class","sc-title"),this._config.icon){const t=document.createElement("ha-icon");t.setAttribute("icon",this._config.icon),t.setAttribute("class","sc-icon"),t.style.cssText="--mdc-icon-size: 1.2em",e.appendChild(t);const n=document.createElement("span");n.innerHTML=this._config.title,e.appendChild(n)}else e.style.cssText="margin-left:0.8em !important",e.innerHTML=this._config.title;t.appendChild(e)}if(this._config.clock){new simpleClock({parentNode:t,locale:this.locale})}if("buttons"==this.mode&&(this.buttons=new buttons({hass:this._hass,shadowRoot:this.shadowRoot,parentNode:t,entities:this.entities,hassEntities:this.hassEntities,locale:this.locale})),e&&((n=document.createElement("div")).setAttribute("class","sc-layer"),n.style.cssText=`height:${this.height-100}px;widht:100%;overflow:auto;`),this._config.text){let i=document.createElement("p");i.setAttribute("class","sc-text"),this._config.icon&&(i.style.cssText="margin-left: 2.8em;"),i.innerHTML=this._config.text,e&&n?n.append(i):t.appendChild(i)}if("entities_card"==this.mode){const i=document.createElement("div");i.setAttribute("class","dt-data"),i.innerHTML='\n                <table class="dt-data">\n                    <tbody id="entities_card">\n                    </tbody>\n                </table>\n            ',e&&n?n.append(i):t.appendChild(i)}e&&n&&t.appendChild(n)}createCard(){this.card=document.createElement("ha-card"),this.card.setAttribute("class","ha-simplecard"),"buttons"==this.mode&&(this.card.setAttribute("class","ha-simplecard-buttons"),this.card.style.boxShadow="none",this.card.style.borderRadius="0"),this.addCss();const t=document.createElement("div");t.id=this.id+"-content",t.style.height=t.style.minHeight=this.height+"px",this.createCardContent(t),this.card.appendChild(t),this.root.appendChild(this.card),this.setAttribute("title","")}_checkLocale(t){try{Intl.getCanonicalLocales(t)}catch(t){return console.error(" RangeError: invalid language tag:",_this.config),navigator.language||navigator.userLanguage}return t}setConfig(t){if(this.root=this.shadowRoot,this.root.lastChild&&this.root.removeChild(root.lastChild),!this._config){this._config=Object.assign({},t),this.id="SC"+Math.floor(1e3*Math.random());const e=navigator.language||navigator.userLanguage||"en-GB";this.locale=t.locale||e,this._checkLocale(),this.entities=[],this.logenabled=t.logger||!0,this.height=this._config.height||"100%",this.title=this._config.title,this.text=this._config.text,this.mode=this._config.mode,["buttons","entities_card"].includes(this.mode)||(this.mode="default"),this.attibutesfilter=this._config.filter||null,this.skipRender=!1,this.entities=[],this.hassEntities=[],this.loginfo_enabled=!0,this._initialized=!0}}connectedCallback(){this._initialized=!0}disconnectedCallback(){this._initialized=!1}getCardSize(){return 3}}customElements.define("simple-card",SimpleCard);